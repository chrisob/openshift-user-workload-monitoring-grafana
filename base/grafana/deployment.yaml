apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - args:
            - -config=/etc/grafana/grafana.ini
          image: grafana/grafana:7.1.5
          name: grafana
          envFrom:
            - configMapRef:
                name: grafana-env-vars
          ports:
            - containerPort: 3001
              name: http
              protocol: TCP
          resources:
            requests:
              cpu: 4m
              memory: 100Mi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-storage
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasources
            - mountPath: /etc/grafana/provisioning/dashboards
              name: grafana-dashboards
            - mountPath: /etc/grafana
              name: grafana-config
        - args:
            - -provider=openshift
            - -https-address=:3000
            - -http-address=
            - -email-domain=*
            - -upstream=http://localhost:3001
            # TODO: reduce needed permissions based on target namespace
            - '-openshift-sar={"resource": "namespaces", "verb": "get"}'
            - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get"}}'
            - -tls-cert=/etc/tls/private/tls.crt
            - -tls-key=/etc/tls/private/tls.key
            - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
            - -cookie-secret-file=/etc/proxy/secrets/session_secret
            - -openshift-service-account=grafana
            - -openshift-ca=/etc/pki/tls/cert.pem
            - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            - -skip-auth-regex=^/metrics
          image: quay.io/openshift/origin-oauth-proxy:4.5
          name: grafana-proxy
          ports:
            - containerPort: 3000
              name: https
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /oauth/healthz
              port: https
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 1m
              memory: 20Mi
          volumeMounts:
            - mountPath: /etc/tls/private
              name: secret-grafana-tls
            - mountPath: /etc/proxy/secrets
              name: secret-grafana-proxy
            - mountPath: /etc/pki/ca-trust/extracted/pem/
              name: grafana-trusted-ca-bundle
              readOnly: true
      nodeSelector:
        beta.kubernetes.io/os: linux
      serviceAccountName: grafana
      volumes:
        - emptyDir: {}
          name: grafana-storage
        - name: grafana-datasources
          secret:
            defaultMode: 420
            secretName: grafana-datasources
        - configMap:
            defaultMode: 420
            name: grafana-dashboards
          name: grafana-dashboards
        - name: grafana-config
          secret:
            defaultMode: 420
            secretName: grafana-config
        - name: secret-grafana-tls
          secret:
            defaultMode: 420
            secretName: grafana-tls
        - name: secret-grafana-proxy
          secret:
            defaultMode: 420
            secretName: grafana-proxy
        - configMap:
            defaultMode: 420
            items:
              - key: service-ca.crt
                path: tls-ca-bundle.pem
            name: grafana-trusted-ca-bundle
          name: grafana-trusted-ca-bundle
